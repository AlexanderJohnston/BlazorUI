@page "/importdata"
@using BlazorUI.Shared;
@using Blazor.Extensions;
@using System.Net.Http;
@inject HttpClient Http
@inject QueryController _query


<h1>Hello, world!</h1>

Welcome to the importer.

<h1 style="font-style:@_headingFontStyle">@_headingText</h1>


<button type="button" class="btn btn-primary manifest" @onclick="@StartManifest">
    Start Manifest
</button>

<button type="button" class="btn btn-primary start" @onclick="@StartImport">
    Start Import
</button>


<button type="button" class="btn btn-primary test" @onclick="@Test">
    Test
</button>

<p>@Response</p>

<p>Etag: @etag</p>

<p>Manifest: @manifestStatus</p>

<p>Test: @TestString</p>

@if (string.IsNullOrEmpty(imports))
{
    <p><em>...</em></p>
}
else
{
    <p>@imports</p>

}

@functions {
    protected async override Task OnInitializedAsync()
    {
        var regionsResponse = await Http.GetAsync("/regions/getstatus");
        etag = regionsResponse.Headers.ETag.Tag;
        _query.SubscribeToQuery(etag, ReadRegions);
    }
    private Task ReadRegions(string message)
    {
        _checkpoint++;
        manifestStatus = "SignalR Received. Checkpoint: " + _checkpoint;
        return Task.CompletedTask;
    }
}

@code {
    private int _checkpoint = 0;
    private string _headingFontStyle = "italic";
    private string _headingText = "Put on your new Blazor!";
    public string imports;
    public HttpResponseMessage _importResponse;
    public string Response;
    public string etag;
    public string manifestStatus = "Not Started";
    public string TestString = "-";



    public async Task ReadImport(string response)
    {
        Response = response;
        manifestStatus = "SignalR Received.";
    }

    public async Task StartImport()
    {
        //_importResponse = await Http.GetAsync("imports/test");
        _importResponse = await Http.PostAsync("imports/startimport", null);
        //imports = await _importResponse.Content.ReadAsStringAsync();
        imports = "Importing...";
    }

    public async Task StartManifest()
    {
        var manifestResponse = await Http.PostAsync("/regions/poststatus", null);
        //manifestStatus = manifestResponse.StatusCode.ToString();
    }
    public void Test()
    {
        TestString = "Clicked.";
    }
}
