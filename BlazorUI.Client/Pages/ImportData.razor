@page "/importdata"
@using BlazorUI.Shared;
@using Blazor.Extensions;
@using System.Net.Http;
@inject HttpClient Http
@inject AppState AppState

<h1>Hello, world!</h1>

Welcome to the importer.

<h1 style="font-style:@_headingFontStyle">@_headingText</h1>

<button type="button" class="btn btn-primary" @onclick="StartImport">
    Start Import
</button>

<button type="button" class="btn btn-primary" @onClick="StartManifest">
    Start Manifest
</button>

<p>@Response</p>

@foreach (var etag in AppState.Etags)
{
<p>Etag: @etag</p>
}

@if (string.IsNullOrEmpty(imports))
{
    <p><em>...</em></p>
}
else
{
    <p>@imports</p>

}

@code {
    [Inject]
    private HubConnectionBuilder _hubBuilder { get; set; }
    private string _headingFontStyle = "italic";
    private string _headingText = "Put on your new Blazor!";
    public string imports;
    public HttpResponseMessage _importResponse;
    public string Response;
    private string etag;

    public async Task ReadImport(string response)
    {
        Response = response;
    }

    public async Task StartImport()
    {
        var connection = _hubBuilder.WithUrl("/hubs/query").Build();
        var regionsResponse = await Http.GetAsync("/api/regions");
        etag = regionsResponse.Headers.ETag.Tag;
        AppState.AddEtag(etag);

        connection.On<string>(etag, async (message) => { await ReadImport(message); });

        //_importResponse = await Http.GetAsync("imports/test");
        _importResponse = await Http.PostAsync("imports/startimport", null);
        //imports = await _importResponse.Content.ReadAsStringAsync();
        imports = "Importing...";
    }

    public async Task StartManifest()
    {
        await Http.PostAsync("/api/regions/fake", null);
    }

    protected override void OnInit()
    {
        AppState.OnChange += StateHasChanged;
    }
}
